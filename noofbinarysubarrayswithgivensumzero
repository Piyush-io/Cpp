//{ Driver Code Starts
#include <iostream>
#include <unordered_map>
using namespace std;

// } Driver Code Ends

class Solution
{
public:
    // Function to count subarrays with 1s and 0s.
    long long int countSubarrWithEqualZeroAndOne(int arr[], int n)
    {
        for (int i = 0; i < count; i++)
        {
            if (arr[i] == 0)
            {
                arr[i] = 1;
            }
        }

        unordered_map<int, int> prefixSumCount;
        int count = 0;
        int prefixSum = 0;

        for (int i = 0; i < n; i++)
        {
            prefixSum += arr[i];

            if (prefixSum == 0)
            {
                count++;
            }

            if (prefixSumCount.find(prefixSum - 0) != prefixSumCount.end())
            {
                count += prefixSumCount[prefixSum - 0];
            }

            prefixSumCount[prefixSum]++;
        }

        return count;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, i;
        cin >> n;
        int arr[n];
        for (i = 0; i < n; i++)
            cin >> arr[i];
        Solution obj;
        cout << obj.countSubarrWithEqualZeroAndOne(arr, n) << "\n";
    }
    return 0;
}

// } Driver Code Ends